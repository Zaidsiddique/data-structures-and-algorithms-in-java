//You are given a large integer represented as an integer array digits, where each 
//digits[i] is the ith digit of the integer. The digits are ordered from most 
//significant to least significant in left-to-right order. The large integer does 
//not contain any leading 0's.

//Increment the large integer by one and return the resulting array of digits.

class Solution {
    public int[] plusOne(int[] digits) {
        int arr[] = new int[digits.length + 1];
        int temp = 1;

        for (int i = digits.length - 1; i >= 0; i--) {
            int a = digits[i] + temp;
            if (a > 9) {
                arr[i + 1] = a - 10;
                temp = 1;
            } else {
                arr[i + 1] = a;
                temp = 0;
            }
        }
        if (temp == 1) {
            arr[0] = 1;
            return arr;
        } else {
            int[] newArr = new int[digits.length];
            for (int i = 0; i < digits.length; i++) {
                newArr[i] = arr[i + 1];
            }
            return newArr;
        }

    }
}